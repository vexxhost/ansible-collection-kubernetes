# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# Kuberentes version
kubernetes_version: 1.28.13

# Name of Ansible group containing all control-plane nodes
kubernetes_control_plane_group: controllers

# TODO(mnaser): We should remove this at some point.
kubernetes_repository_apt: "deb https://apt.kubernetes.io/ kubernetes-xenial main"

# Kubernetes image repository (leave undefined to use the `kubeadm` default)
kubernetes_image_repository: registry.k8s.io

# Deprecated: Please use "kubelet_node_ip" instead.
kubernetes_node_ip: "{{ kubelet_node_ip }}"

# Deprecated: Please use "kubelet_cri_socket" instead.
kubernetes_cri_socket: "{{ kubelet_cri_socket }}"

# Deprecated: Please use "kubelet_allow_unsafe_swap" instead.
kubernetes_allow_unsafe_swap: false

# If the deployment is in a non-init namespace (docker/LXC/...)
# then kube-proxy must be prevented from ajusting conntrack settings
kubernetes_non_init_namespace: "{{ ansible_connection == 'community.docker.docker' }}"

# select the node selector for the CoreDNS pods.
kubernetes_coredns_node_selector:
  openstack-control-plane: enabled

# Allow custom CA usage in the cluster
kubernetes_allow_custom_ca: false

# Base python packages required with, or without an ansible target venv
# NOTE(jrosser) An ansible target venv must be used on python>=3.12 due to pep-668
kubernetes_pip_packages_base:
  - kubernetes     # this needs to be newer than the version in many distro packages

# Additional python packages required if using an ansible target venv
kubernetes_pip_packages_venv:
  - cryptography   # required to examine certificates
  - pyyaml         # required for helm
  - kubernetes     # required for kubernetes upgrade check

# Python packages to install
kubernetes_pip_packages_install: "{{ kubernetes_pip_packages_base +
                                        (ansible_collection_kubernetes_target_venv is defined) | ternary(kubernetes_pip_packages_venv, []) +
                                        (kubernetes_pip_packages_extra | default([])) }}"

# Distro packages to install
kubernetes_distro_packages_base:
  - python3-pip

# Distro packages to install when an ansible target venv is not in use
kubernetes_distro_packages_no_venv:
  - python3-cryptography

kubernetes_distro_packages_install: "{{ kubernetes_distro_packages_base +
					(ansible_collection_kubernetes_target_venv is defined) | ternary([], kubernetes_distro_packages_no_venv) +
                                        kubernetes_distro_packages_extra | default([]) }}"
