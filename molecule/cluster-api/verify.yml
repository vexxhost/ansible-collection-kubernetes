# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Verify
  hosts: all
  become: true
  tasks:
    - name: Include default variables
      ansible.builtin.include_vars:
        file: "../../roles/{{ item }}/defaults/main.yml"
      loop:
        - download_artifact
        - clusterctl
        - cluster_api

    - name: Ensure the "clusterctl" binary is installed
      ansible.builtin.command: "{{ clusterctl_download_dest }} version -ojson"
      register: _clusterctl_version

    - name: Assert that the "clusterctl" binary is installed and version matches
      ansible.builtin.assert:
        that:
          - _clusterctl_version.rc == 0
          - _clusterctl_version.stdout | from_json | json_query('clusterctl.gitVersion') | regex_replace('^v', '') == clusterctl_version

    - name: Ensure that the Cluster API components are ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Deployment
        name: "{{ item.name }}"
        namespace: "{{ item.namespace }}"
      register: _resource_info
      until: _resource_info.resources | json_query('[*].status.conditions[?reason==`NewReplicaSetAvailable`][].status') | select ('match','True') | list | length == 1
      delay: 2
      retries: 5
      loop:
        - namespace: capi-kubeadm-bootstrap-system
          name: capi-kubeadm-bootstrap-controller-manager
        - namespace: capi-kubeadm-control-plane-system
          name: capi-kubeadm-control-plane-controller-manager
        - namespace: capi-system
          name: capi-controller-manager
        - namespace: capo-system
          name: capo-controller-manager

    - name: Ensure that the Cluster API CRDs exist
      kubernetes.core.k8s_info:
        api_version: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        name: "{{ item }}"
      loop:
        - clusters.cluster.x-k8s.io
        - openstackclusters.infrastructure.cluster.x-k8s.io
        - kubeadmcontrolplanes.controlplane.cluster.x-k8s.io
        - machinedeployments.cluster.x-k8s.io
        - machines.cluster.x-k8s.io
        - openstackmachines.infrastructure.cluster.x-k8s.io

    - name: Get a list of all Cluster API providers
      run_once: true
      kubernetes.core.k8s_info:
        api_version: clusterctl.cluster.x-k8s.io/v1alpha3
        kind: Provider
      register: _cluster_api_providers

    - name: Parse provider resources into version mapping
      run_once: true
      ansible.builtin.set_fact:
        _cluster_api_core_version: "{{ _cluster_api_providers.resources | selectattr('type', 'equalto', 'CoreProvider') | map(attribute='version') | first | regex_replace('^v', '') }}"
        _cluster_api_bootstrap_version: "{{ _cluster_api_providers.resources | selectattr('type', 'equalto', 'BootstrapProvider') | map(attribute='version') | first | regex_replace('^v', '') }}"
        _cluster_api_control_plane_version: "{{ _cluster_api_providers.resources | selectattr('type', 'equalto', 'ControlPlaneProvider') | map(attribute='version') | first | regex_replace('^v', '') }}"
        _cluster_api_infrastructure_version: "{{ _cluster_api_providers.resources | selectattr('type', 'equalto', 'InfrastructureProvider') | map(attribute='version') | first | regex_replace('^v', '') }}"

    - name: Assert that the versions are the correct ones
      ansible.builtin.assert:
        that:
          - _cluster_api_core_version == cluster_api_core_version
          - _cluster_api_bootstrap_version == cluster_api_bootstrap_version
          - _cluster_api_control_plane_version == cluster_api_control_plane_version
          - _cluster_api_infrastructure_version == cluster_api_infrastructure_version

    # Note(okozachenko1203): Until https://github.com/kubernetes-sigs/cluster-api/issues/9132 is fixed,
    #                        we set the default value of imagePullPolicy in CRDs. Without this,
    #                         kcptemplate re-apply fails.
    - name: Test CRD patches
      block:
        - name: Create a test kcptemplate
          kubernetes.core.k8s:
            wait: true
            definition:
              apiVersion: controlplane.cluster.x-k8s.io/v1beta1
              kind: KubeadmControlPlaneTemplate
              metadata:
                name: test-crd-patch
                namespace: default
              spec:
                template:
                  spec:
                    kubeadmConfigSpec:
                      clusterConfiguration:
                        apiServer:
                          extraArgs:
                            cloud-provider: external
                            profiling: 'false'
                          extraVolumes: []
                        controllerManager:
                          extraArgs:
                            cloud-provider: external
                            profiling: 'false'
                        scheduler:
                          extraArgs:
                            profiling: 'false'
                      initConfiguration:
                        nodeRegistration:
                          name: ctl1
                          kubeletExtraArgs:
                            cloud-provider: external
                      joinConfiguration:
                        nodeRegistration:
                          name: ctl1
                          kubeletExtraArgs:
                            cloud-provider: external

        - name: Reapply the test kcptemplate
          kubernetes.core.k8s:
            wait: true
            definition:
              apiVersion: controlplane.cluster.x-k8s.io/v1beta1
              kind: KubeadmControlPlaneTemplate
              metadata:
                name: test-crd-patch
                namespace: default
              spec:
                template:
                  spec:
                    kubeadmConfigSpec:
                      initConfiguration:
                        nodeRegistration:
                          name: ctl1
                          kubeletExtraArgs:
                            cloud-provider: external
                      joinConfiguration:
                        nodeRegistration:
                          name: ctl1
                          kubeletExtraArgs:
                            cloud-provider: external
